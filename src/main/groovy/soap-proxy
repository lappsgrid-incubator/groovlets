package src.main.groovy

import groovy.json.JsonBuilder
import groovy.util.logging.Slf4j

@GrabConfig(systemClassLoader=true)
@Grab('org.lappsgrid:client:2.0.4')
import org.lappsgrid.client.*

import groovy.json.JsonSlurper
@Grab('ch.qos.logback:logback-classic:1.2.3')
@Grab('org.slf4j:slf4j-simple:1.7.25')
import org.slf4j.Logger
import src.main.library.LoggerFactory

import javax.servlet.http.HttpServletResponse

Logger logger = LoggerFactory.getLogger("soap-proxy")
logger.info("Servicing request.")
if (request.method == 'OPTIONS') {
    response.status = 200
    response.addHeader('Allow', 'POST')
    response.addHeader('Accept', 'application/json, text/plain')
    return
}

if (request.method != 'POST') {
    response.status = HttpServletResponse.SC_METHOD_NOT_ALLOWED
    response.addHeader('Allow', 'POST')
    out.println "Method ${request.method} not allowed. Please send a POST request."
    logger.warn "Not a POST"
    return
}

if (params.id == null) {
    response.status = 400
    out.println "No service ID provided."
    logger.warn "No service ID provided."
    return
}

String url
if (params.id == 'localhost') {
    logger.debug("id is localhost")
    url = 'http://localhost:8080/tcf%2Dconverter/1%2E0%2E0/services/converter'
}
else if (params.id.startsWith("anc:")) {
    logger.debug("calling vassar service")
    url = "http://vassar.lappsgrid.org/invoker/${params.id}"
}
else {
    logger.debug("calling brandeis service")
   url = "http://eldrad.cs-i.brandeis.edu:8080/service_manager/invoker/${params.id}"
}

String text = request.inputStream.text
if (text == null || text == '') {
    response.status = 400
    out.println "No text was posted."
    logger.warn "No text was posted."
    return
}

String username = 'tester'
String password = 'tester'


logger.info "Proxying ${url}"
//logger.info("Text is ${text}")

ServiceClient client = new ServiceClient(url, username, password)
String json = client.execute(text)
response.status = 200
response.contentType = 'application/json'
out.println groovy.json.JsonOutput.prettyPrint(json)
logger.info "Request serviced."
return

//void debug(String message) {
//    Log.logger.debug(message)
//}
//void log(String message) {
//    Log.logger.info(message)
//}
//void warn(String message) {
//    Log.logger.warn(message)
//}
//void error(String message) {
//    Log.logger.error(message)
//}
