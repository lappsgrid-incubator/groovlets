package src.main.groovy

import java.security.SecureRandom

def method = request.method

if (method != 'GET') {
    response.status = 405
    response.addHeader('Allow', 'GET')
    return
    return
}

Map charsets = [
    default : "!%^*_+1234567890-=,.:abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",
    safe : "_1234567890-=,.abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",
    alphanum : "1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",
    alpha : "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",
    num : "1234567890",
    hex : "0123456789abcdef"

]
//String DEFAULT_CHARS = "!%^*_+1234567890-=,.:abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
//String SAFE_CHARS = "_1234567890-=,.abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
//String HEX_CHARS = "0123456789abcdef";

SecureRandom random = new SecureRandom()

Map params = request.parameterMap
String type = 'default'
if (params.type) {
    type = params.type[0]
}
int length = 16
if (params.length) try {
    length = params.length[0] as int
}
catch (Exception e) {
    response.status = 400
    return
}

String chars = charsets[type]
if (params.chars) {
    chars = params.chars[0]
}
if (chars == null) {
    response.status = 400
    out.write "Invalid type: $type"
}

//} else if (type == 'default') {
//    chars = DEFAULT_CHARS
//} else if (type == 'safe') {
//    chars = SAFE_CHARS
//} else if (type == 'hex') {
//    chars = HEX_CHARS
//} else {
//    response.status = 400
//    out.write "Invalid type: $type"
//    return
//}

if (length < 16) {
    length = 16
}

StringBuilder buffer = new StringBuilder()
for (int i = 0; i < length; ++i) {
    buffer << chars.charAt(random.nextInt(chars.length()));
}
response.status = 200
out.write buffer.toString()
