
@GrabConfig(systemClassLoader=true)
@Grab('com.h2database:h2:1.4.194')

import groovy.json.*
import groovy.sql.Sql

import javax.servlet.http.HttpServletResponse

import static javax.servlet.http.HttpServletResponse.*

LOG_PATH = System.getenv('LOG_PATH')
if (LOG_PATH == null) {
    LOG_PATH = '/tmp/groovlets.log'
}

DB_URL = System.getenv('DB_URL')
if (DB_URL == null) {
    DB_URL = "jdbc:h2:file://tmp/pid"
}

TEXT='text/plain'
JSON='application/json'

// Not an efficient way of performing logging, but this should be called exactly once
// per method invocation.
void log(String message) {
    String timestamp = new Date().format('yyyy-MM-dd hh:mm:ss')
    new File(LOG_PATH).append("[$timestamp] PID ${request.remoteHost} $message\n")
}

String method = request.method
if (request.method == 'OPTIONS') {
    response.status = 200
    response.addHeader('Allow', 'GET')
    response.addHeader('Accept', 'application/json')
    return
}
if (method != 'GET') {
    response.status = HttpServletResponse.SC_METHOD_NOT_ALLOWED
    response.addHeader('Allow', 'OPTIONS, GET')
    return
}

Sql sql = Sql.newInstance(DB_URL, "pid", "pid", "org.h2.Driver")
String pid
if (params.url) {
    def row = sql.firstRow("select * from pid where url = ${params.url}")
    if (row) {
        pid = row.pid
        response.status = 200
    }
    else {
        pid = UUID.randomUUID()
        sql.executeInsert('insert into pid (url,pid) VALUES (:url,:pid);', [url:params.url, pid:pid])
        response.status = 201
    }
    out.print pid
    return
}

if (params.pid) {
    def row = sql.firstRow("select * from pid where pid = ${params.pid}")
    if (row) {
        response.status = 200
        out.print row.url
        return
    }
    response.status = 400
    out.println "No such pid"
    return
}
def rows = sql.rows("select * from pid;")
html.html {
    head {
        title 'Persistent Identifier Registry'
    }
    body {
        h1 'Usage'
        p '''The LAPPS Grid PID (Persistent ID) Registry can be used to determine the PID (a 
UUID) for a give LAPPS web service.  The service URL can also be determined from the PID. 
'''
        ol {
            li 'curl http://api.lappsgrid.org/url=http://service.example.com'
            li 'curl http://api.lappsgrid.org/pid=1111-1111-1111'
        }
        p '''In the first example the PID for the service http://service.example.com will be
returned.  In the second example the URL for the service identified by the PID 1111-1111-1111
will be returned.'''
        center {
            table {
                tr {
                    th 'PID'
                    th 'URL'
                }
                rows.each { row ->
                    tr {
                        td row.pid
                        td row.url
                    }
                }
            }
        }
    }
}
//response.status = 400

